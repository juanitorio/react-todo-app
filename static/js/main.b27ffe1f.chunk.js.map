{"version":3,"sources":["components/Header.js","components/Todo.js","components/TodoList.js","components/AddTodo.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","style","linkStyle","to","textDecoration","color","Todo","this","props","todo","id","task","completed","type","onChange","markCompleted","bind","checked","onClick","deleteTodo","Component","TodoList","todos","map","current","index","key","AddTodo","state","value","onValueChange","e","newValue","target","setState","formSubmit","preventDefault","input","focus","onSubmit","ref","placeholder","hidden","About","Fragment","App","uuid","a","saveToLocalStorage","filter","newTodo","localStorage","setItem","JSON","stringify","todosFromLocalStorage","parse","getItem","basename","exact","path","render","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b27ffe1f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Header() {\n    return (\n        <header>\n            <h3>Todo List</h3>\n            <p className=\"nav\">\n                <Link style={linkStyle} to=\"/\">\n                    Home\n                </Link>{\" \"}\n                |{\" \"}\n                <Link style={linkStyle} to=\"/about\">\n                    About\n                </Link>\n            </p>\n        </header>\n    );\n}\n\nconst linkStyle = {\n    textDecoration: \"none\",\n    color: \"#fff\"\n};\n","import React, { Component } from \"react\";\n\nexport default class Todo extends Component {\n    render() {\n        const { id, task, completed } = this.props.todo;\n        return (\n            <li>\n                <label style={{ textDecoration: completed ? \"line-through\" : \"none\" }}>\n                    <input type=\"checkbox\" onChange={this.props.markCompleted.bind(this, id)} checked={completed} /> {task}\n                </label>\n                <button className=\"btn-delete\" onClick={this.props.deleteTodo.bind(this, id)}>\n                    X\n                </button>\n            </li>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport Todo from \"./Todo\";\n\nexport default class TodoList extends Component {\n    render() {\n        return (\n            <ul className=\"todo-list\">\n                {this.props.todos.map((current, index) => (\n                    <Todo key={index} todo={current} markCompleted={this.props.markCompleted} deleteTodo={this.props.deleteTodo} />\n                ))}\n            </ul>\n        );\n    }\n}\n","import React, { Component } from \"react\";\n\nexport default class AddTodo extends Component {\n    state = {\n        value: \"\"\n    };\n\n    componentDidMount() {\n        this.input.focus();\n    }\n\n    onValueChange = e => {\n        const newValue = e.target.value;\n        this.setState({\n            value: newValue\n        });\n    };\n\n    formSubmit = e => {\n        e.preventDefault();\n\n        if (this.state.value !== \"\") {\n            this.props.formSubmit(this.state.value);\n            this.setState({\n                value: \"\"\n            });\n        }\n    };\n\n    render() {\n        return (\n            <form onSubmit={this.formSubmit}>\n                <input\n                    ref={input => (this.input = input)}\n                    type=\"text\"\n                    placeholder=\"Add Todo...\"\n                    value={this.state.value}\n                    onChange={this.onValueChange}\n                />\n                <input type=\"submit\" value=\"Submit\" hidden />\n            </form>\n        );\n    }\n}\n","import React from \"react\";\n\nexport default function About() {\n    return (\n        <React.Fragment>\n            {/* <h3>About Us</h3> */}\n            <p>This is the about page of the react-todo app. This is just a test app.</p>\n        </React.Fragment>\n    );\n}\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport { v4 as uuid } from \"uuid\";\nimport Header from \"./components/Header\";\nimport TodoList from \"./components/TodoList\";\nimport AddTodo from \"./components/AddTodo\";\nimport About from \"./components/About\";\nimport \"./App.css\";\n\nclass App extends Component {\n    state = {\n        todos: [\n            {\n                id: uuid(),\n                task: \"Learn JavaScript\",\n                completed: false,\n            },\n            {\n                id: uuid(),\n                task: \"Learn ES6+\",\n                completed: false,\n            },\n            {\n                id: uuid(),\n                task: \"Learn React\",\n                completed: false,\n            },\n        ],\n    };\n\n    async componentDidMount() {\n        const todosFromLocalStorage = JSON.parse(localStorage.getItem(\"todos\"));\n\n        if (todosFromLocalStorage) await this.setState({ todos: todosFromLocalStorage });\n    }\n\n    markCompleted = async (id) => {\n        await this.setState({\n            todos: this.state.todos.map((todo) => {\n                if (todo.id === id) {\n                    todo.completed = !todo.completed;\n                }\n                return todo;\n            }),\n        });\n\n        this.saveToLocalStorage();\n    };\n\n    deleteTodo = async (id) => {\n        await this.setState({ todos: [...this.state.todos.filter((todo) => todo.id !== id)] });\n\n        this.saveToLocalStorage();\n    };\n\n    formSubmit = async (value) => {\n        const newTodo = {\n            id: uuid(),\n            task: value,\n            completed: false,\n        };\n        await this.setState({\n            todos: [...this.state.todos, newTodo],\n        });\n\n        this.saveToLocalStorage();\n    };\n\n    saveToLocalStorage = () => {\n        localStorage.setItem(\"todos\", JSON.stringify(this.state.todos));\n    };\n\n    render() {\n        return (\n            <Router basename=\"/\">\n                <div className=\"App\">\n                    <div className=\"App-header\">\n                        <Header />\n                        <Route\n                            exact\n                            path=\"/\"\n                            render={(props) => (\n                                <React.Fragment>\n                                    <AddTodo formSubmit={this.formSubmit} />\n                                    <TodoList todos={this.state.todos} markCompleted={this.markCompleted} deleteTodo={this.deleteTodo} />\n                                </React.Fragment>\n                            )}\n                        ></Route>\n                        <Route path=\"/about\" component={About}></Route>\n                    </div>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\"This web app is being served cache-first by a service \" + \"worker. To learn more, visit https://bit.ly/CRA-PWA\");\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" + \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" }\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\"No internet connection found. App is running in offline mode.\");\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}